{"version":3,"sources":["requests.js","axios.js","TrailerDetails.js","Row.js","Banner.js","Nav.js","App.js","index.js"],"names":["API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","instance","axios","create","baseURL","TrailerDetails","trailerMovieName","trailerMovieDescription","className","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","trailerMovie","setTrailerMovie","useEffect","a","get","request","filtered_movies","i","data","results","length","poster_path","backdrop_path","push","fetchData","map","movie","onClick","movie_name","original_title","original_name","movieUrl","Axios","then","trailerData","items","id","videoId","fetchTrailer","name","description","string","overview","n","substr","handleClick","src","alt","opts","height","width","playerVars","autoplay","right","duration","Banner","str","setMovie","style","backgroundImage","console","log","Math","floor","random","Nav","show","setShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8987396d.chunk.js","sourcesContent":["const API_KEY = \"ee863a1563e04349c7de9fd11eaf7ac5\";\r\n\r\nconst requests = {\r\n  fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=123`,\r\n  fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n  fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanceMovies: `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;","import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3\",\r\n  // timeout: 1000\r\n});\r\n\r\nexport default instance;\r\n","import React from \"react\";\r\nimport \"./style/TrailerDetails.css\";\r\n\r\nfunction TrailerDetails({ trailerMovieName, trailerMovieDescription }) {\r\n  return (\r\n    <div className=\"trailer__details\">\r\n      <h1 className=\"trailer__title\">{trailerMovieName}</h1>\r\n      <p className=\"trailer__description\">{trailerMovieDescription}</p>\r\n      <div className=\"trailer__buttons\">\r\n        <button className=\"trailer__button\">Play</button>\r\n        <button className=\"trailer__button\">My List</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TrailerDetails;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios.js\";\r\nimport Youtube from \"react-youtube\";\r\nimport \"./style/Row.css\";\r\nimport Axios from \"axios\";\r\nimport TrailerDetails from \"./TrailerDetails.js\";\r\nimport Fade from \"react-reveal/Fade\";\r\nconst base_url = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n  const [trailerMovie, setTrailerMovie] = useState({});\r\n\r\n  useEffect(() => {\r\n    //if [] run once when the row loads, and don't run again\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      //   console.log(request.data.results);\r\n\r\n      //filteration of movies\r\n      let filtered_movies = [];\r\n      for (let i = 0; i < request.data.results.length; i++) {\r\n        if (\r\n          request.data.results[i].poster_path !== null &&\r\n          request.data.results[i].backdrop_path !== null\r\n        ) {\r\n          filtered_movies.push(request.data.results[i]);\r\n        }\r\n      }\r\n      setMovies(filtered_movies);\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  //   console.log(movies);\r\n\r\n  function truncate(string, n) {\r\n    return string?.length > n ? string.substr(0, n - 1) + \"...\" : string;\r\n  }\r\n\r\n  //taken from react-youtube documentation at https://www.npmjs.com/package/react-youtube\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"640\",\r\n    playerVars: {\r\n      // https://developers.google.com/youtube/player_parameters\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      // console.log(movie);\r\n      // console.log(\r\n      //   \"movie name :\",\r\n      //   movie?.original_title || movie?.original_name || \"\"\r\n      // );\r\n\r\n      let movie_name = movie?.original_title || movie?.original_name;\r\n      if (movie_name == null) {\r\n        return;\r\n      }\r\n\r\n      //trailer fetching\r\n      async function fetchTrailer(movie_name) {\r\n        const movieUrl =\r\n          \"https://www.googleapis.com/youtube/v3/search?part=snippet&key=AIzaSyB4fxFbEZqA9Fc-xBZU_TclTvHDvm21Qic&type=video&videoDefinition=high&q=\" +\r\n          movie_name +\r\n          \" latest trailer\";\r\n        Axios.get(movieUrl).then(function (trailerData) {\r\n          // console.log(trailerData.data.items[0].id.videoId);\r\n          setTrailerUrl(trailerData.data.items[0].id.videoId);\r\n        });\r\n      }\r\n      fetchTrailer(movie_name);\r\n\r\n      //getting trailer movie details\r\n      for (let i = 0; i < movies.length; i++) {\r\n        if (\r\n          movies[i].original_title === movie_name ||\r\n          movies[i].original_name === movie_name\r\n        ) {\r\n          const TrailerDetails = {\r\n            name: movie_name,\r\n            description: truncate(movies[i]?.overview, 250),\r\n          };\r\n          setTrailerMovie(TrailerDetails);\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n            src={`${base_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && (\r\n        <div className=\"trailer\">\r\n          {trailerUrl && <Youtube videoId={trailerUrl} opts={opts} />}\r\n          <Fade right duration={1500}>\r\n            <TrailerDetails\r\n              trailerMovieName={trailerMovie.name}\r\n              trailerMovieDescription={trailerMovie.description}\r\n            />\r\n          </Fade>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios.js\";\r\nimport requests from \"./requests.js\";\r\nimport \"./style/Banner.css\";\r\n\r\nfunction Banner() {\r\n\r\n   const [movie, setMovie] = useState([]);\r\n   const style = {\r\n      backgroundImage: `url(\"https://image.tmdb.org/t/p/original${movie?.backdrop_path}\")`,\r\n   };\r\n\r\n   useEffect(() => {\r\n      async function fetchData() {\r\n         const request = await axios.get(requests.fetchNetflixOriginals);\r\n         console.log(\"Banner\", request.data.results);\r\n         setMovie(\r\n            request.data.results[\r\n            Math.floor(Math.random() * request.data.results.length)\r\n            ]\r\n         );\r\n      }\r\n      fetchData();\r\n   }, []);\r\n\r\n   console.log(\"movie\", movie);\r\n   console.log(\"movie1\", movie.name);\r\n   console.log(\"movie2\", movie?.name);\r\n   function truncate(str, n) {\r\n      return str?.length > n ? str.substr(0, n - 1) + \" ...\" : str;\r\n      \r\n   }\r\n\r\n   return (\r\n      <header className=\"banner\" style={style}>\r\n         <div className=\"banner__contents\" >\r\n            <h1 className=\"banner__title\">\r\n               {movie?.title || movie?.name || movie?.original_name}\r\n            </h1>\r\n            <div className=\"banner__buttons\">\r\n               <button className=\"banner__button\">Play</button>\r\n               <button className=\"banner__button\">My List </button>\r\n            </div>\r\n            <h1 className=\"banner__description\">\r\n\r\n               {/* {movie.overview\r\n                  && truncate(movie.overview, 100)\r\n               } */}\r\n\r\n               {} \r\n               {truncate(movie?.overview, 150)}\r\n\r\n            </h1>\r\n            <div className=\"banner--fadeBottom\"> </div>\r\n         </div>\r\n      </header>\r\n   );\r\n}\r\nexport default Banner;\r\n","import React, { useEffect, useState } from 'react'\r\nimport \"./style/Nav.css\";\r\nfunction Nav() {\r\n   const [show, setShow] = useState()\r\n\r\n   useEffect(() => {\r\n      window.addEventListener(\"scroll\", () => {\r\n         if (window.scrollY > 100) {\r\n            setShow(true)\r\n         } else {\r\n            setShow(false)\r\n         }\r\n      });\r\n      return () => {\r\n         window.removeEventListener(\"scroll\");\r\n      }\r\n   }, [])\r\n\r\n   return (\r\n      <div className={`nav ${show ? \"nav__black\" : \"\"}`} >\r\n         <img\r\n            className=\"nav__logo\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/0/08/Netflix_2015_logo.svg/1280px-Netflix_2015_logo.svg.png\"\r\n            alt=\"Netflix Logo\"\r\n         />\r\n         <img\r\n            className=\"nav__avatar\"\r\n            src=\"https://i.pinimg.com/originals/0d/dc/ca/0ddccae723d85a703b798a5e682c23c1.png\"\r\n            alt=\"Avatar\"\r\n         />\r\n      </div>\r\n   )\r\n\r\n\r\n}\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport requests from \"./requests.js\";\r\nimport Row from \"./Row\";\r\nimport Banner from \"./Banner\";\r\nimport Nav from \"./Nav\";\r\nimport \"./style/App.css\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav />\r\n      <Banner />\r\n      <Row\r\n        title=\"Trending Now\"\r\n        fetchUrl={requests.fetchTrending}\r\n        isLargeRow={true}\r\n      />\r\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\r\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\r\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\r\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\r\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} />\r\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './style/index.css';\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n  \r\n\r\n"],"sourceRoot":""}